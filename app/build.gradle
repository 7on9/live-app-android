buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://jitpack.io' }

    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.github.Mindera:gradle-slack-plugin:1.0.4'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.mindera.gradle.slack'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'http://hypertrack-android-sdk.s3-website-us-west-2.amazonaws.com/' }
}

/*
slack {
    url 'https://hooks.slack.com/services/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'
    dependsOnTasks 'crashlyticsUploadDistributionDebug'
    title 'New version of Send ETA available on Beta'
}
*/

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy.MM.dd.HH.mm.ss')
    return formattedDate
}

android {

    signingConfigs {
        releaseConfig {
            keyAlias 'meta-release'
            keyPassword 'Hyp3rTr@ck123#'
            storeFile file('/Users/suhas/Hypertrack/keystores/android.jks')
            storePassword 'iygn67u9'
        }
    }

    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    lintOptions {
        abortOnError false
    }

    def versionPropsFile = file('gradle.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def value = 0

        def runTasks = gradle.startParameter.taskNames
        if ('cUDD' in runTasks || 'crashlyticsUploadDistributionDebug' in runTasks) {
            value = 1;
        }

        def versionMajor = 0
        def versionMinor = 1
        def versionPatch = versionProps['VERSION_PATCH'].toInteger() + value
        def versionBuild = getDate()//versionProps['VERSION_BUILD'].toInteger() + 1
        def versionNumber = versionProps['VERSION_NUMBER'].toInteger() + value

        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps['VERSION_NUMBER'] = versionNumber.toString()
        versionProps['version'] = versionMajor + "." + versionMinor + "." + versionPatch
        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "io.hypertrack.meta"
            versionCode versionNumber
            versionName "${versionMajor}.${versionMinor}.${versionPatch}(${versionBuild})"
            minSdkVersion 19
            targetSdkVersion 23

            multiDexEnabled true
        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }

    /*
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace("app-debug.apk", "SendETA-${variant.versionName}.apk"))
        }
    }
    */
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "API_KEY", '"pk_8df4a9c1a6c258ed9c09e6a445b068455ad6e88b"'
            buildConfigField "String", "BASE_URL",'"http://api.sendeta.com"'
            signingConfig signingConfigs.releaseConfig
        }
        debug {
            buildConfigField "String", "API_KEY", '"pk_65801d4211efccf3128d74101254e7637e655356"'
            buildConfigField "String", "BASE_URL",'"https://meta-api-staging.herokuapp.com"'
            ext.betaDistributionReleaseNotes = "BETA distribution via Gradle"
            ext.betaDistributionEmails="suhas@hypertrack.io, tapan@hypertrack.io"
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.mcxiaoke.volley:library:1.0.17'
    compile 'com.google.code.gson:gson:2.4'
    compile 'io.hypertrack:hypertrack-driver-sdk:0.1.14'
    compile 'com.google.maps.android:android-maps-utils:0.4+'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.3@aar') {
        transitive = true;
    }
    compile 'com.googlecode.libphonenumber:libphonenumber:7.2.3'
    compile project(':hypertrack-sdk-debug')
}

apply plugin: 'com.google.gms.google-services'